@use "src/styles/mixins";

$phoneHeight: 44rem;
$phoneWidth: $phoneHeight * 0.495;
$phoneBorderRadius: 30px;
$phoneBgColor: hsl(218, 10%, 16%);
$phoneBgColorDarker: hsl(218, 10%, 13%);

$screenBorderLength: 1.2rem;
$screenBorderRadius: $phoneBorderRadius * 0.65;
$screenBgColor: hsl(0, 0%, 96%);
$screenPlaceholderColor: hsl(218, 33%, 92%);

$topElementsWidth: $phoneWidth * 0.47;
$topElementsHeight: $screenBorderLength * 2;
$topElementBorderRadius: 10px;
$topElementBgColor: hsl(240, 3%, 8%);
$speakerWidth: 3rem;
$speakerHeight: 0.4rem;
$cameraDiameter: 1rem;

$buttonWidth: 0.4rem;
$buttonBorderRadius: 2px;

$powerButtonHeight: $phoneHeight * 0.1;
$powerButtonBgColor: hsl(218, 10%, 20%);

$volumeButtonsHeight: $powerButtonHeight * 1.5;
$volumeButtonHeight: $volumeButtonsHeight * 0.45;

.phone-container {
  position: relative;
  width: $phoneWidth;
  height: $phoneHeight;
  border-radius: $phoneBorderRadius;

  transform: rotateY(-30deg) rotateX(30deg) translateZ(2rem);
  box-shadow: 3rem 3rem 5rem 0px hsla(240, 3%, 17%, 0.7);

  .phone {
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: $phoneBorderRadius;
    background-color: $phoneBgColor;
    z-index: 0;

    &--layer {
      background-color: $phoneBgColorDarker;
      z-index: -1;
    }

    &__screen {
      @include mixins.center-in-parent();
      width: calc(#{$phoneWidth} - 2 * #{$screenBorderLength});
      height: calc(#{$phoneHeight} - 2 * #{$screenBorderLength});
      border-radius: $screenBorderRadius;
      background-color: $screenBgColor;
      z-index: 1;
      padding: 2 * $screenBorderLength $screenBorderLength;

      &__content {
        position: relative;
        width: 100%;
        height: 100%;
        overflow: hidden;

        &__placeholder {
          position: absolute;
          width: 100%;
          height: 100%;
          display: flex;
          flex-direction: column;
          justify-content: space-around;
          padding-bottom: 3rem;
          z-index: -1;

          .image {
            width: 100%;
            height: 25%;
            border-radius: 3px;
            background-color: $screenPlaceholderColor;
          }

          .circle {
            position: relative;
            background-color: $screenPlaceholderColor;
            width: 4rem;
            height: 4rem;
            border-radius: 50%;

            &::before,
            &::after {
              position: absolute;
              content: "";
              background-color: $screenPlaceholderColor;
              width: 4rem;
              height: 4rem;
              border-radius: 50%;
            }
            &::before {
              transform: translateX(150%);
            }
            &::after {
              transform: translateX(300%);
            }
          }

          .text {
            position: relative;
            width: 100%;
            height: 3px;
            background-color: $screenPlaceholderColor;

            &::before,
            &::after {
              content: "";
              position: absolute;
              width: 100%;
              height: 3px;
              background-color: $screenPlaceholderColor;
            }
            &::before {
              transform: translateY(250%);
            }
            &::after {
              transform: translateY(500%);
            }
          }
        }
      }
    }

    &__top-elements {
      @include mixins.center-in-parent(50%, 0);
      transform: translate(-50%, 0);
      width: $topElementsWidth;
      height: $topElementsHeight;
      background-color: inherit;
      border-radius: 0 0 $topElementBorderRadius $topElementBorderRadius;
      z-index: 2;

      &__speaker {
        width: $speakerWidth;
        height: $speakerHeight;
        border-radius: $speakerHeight * 0.5;
        background-color: $topElementBgColor;
        @include mixins.center-in-parent(50%, 60%);
      }

      &__camera {
        width: $cameraDiameter;
        height: $cameraDiameter;
        border-radius: 50%;
        background-color: $topElementBgColor;
        @include mixins.center-in-parent(80%, 60%);
      }
    }

    &__power-button {
      @include mixins.center-in-parent(100%, 30%);
      width: $buttonWidth;
      height: $powerButtonHeight;
      border-radius: $buttonBorderRadius;
      background-color: $powerButtonBgColor;
    }

    &__volumen-buttons {
      @include mixins.center-in-parent(0, 30%);
      width: $buttonWidth;
      height: $volumeButtonsHeight;
      display: flex;
      flex-direction: column;
      justify-content: space-between;

      &__button {
        width: 100%;
        height: $volumeButtonHeight;
        border-radius: $buttonBorderRadius;
        background-color: $phoneBgColor;
      }
    }
  }
}
